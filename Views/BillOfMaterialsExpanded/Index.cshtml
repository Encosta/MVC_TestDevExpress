@model IEnumerable<MVC_Test.Models.BillOfMaterialsExpanded>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_DevExtremeLayout.cshtml";
}

<h2>Index</h2>

@(Html.DevExtreme().TreeList<MVC_Test.Models.BillOfMaterialsExpanded>()
    .DataSource(ds => ds.Mvc()
        .Controller("BillOfMaterialsExpanded")
        .LoadAction("Get")
        .InsertAction("Post")
        .UpdateAction("Put")
        .DeleteAction("Delete")
        .Key("BillOfMaterialsExpandedId")
    )
    .RootValue("HasChild")
    .ParentIdExpr("ParentId")
    .KeyExpr("FullSequence")
    .RemoteOperations(o => o.Filtering(true).Grouping(true).Sorting(true))
    .Selection(s => s
            .Mode(SelectionMode.Multiple)
            .Recursive(true)
    )
    .Columns(columns => {

        columns.AddFor(m => m.BomLevel);

        columns.AddFor(m => m.TopLevelItem);

        columns.AddFor(m => m.TopLevelDescription);

        columns.AddFor(m => m.ParentItem);

        columns.AddFor(m => m.ParentDescription);

        columns.AddFor(m => m.ComponentItem);

        columns.AddFor(m => m.ComponentDescription);

        columns.AddFor(m => m.QuantityPerTop);

        columns.AddFor(m => m.QuantityPerParent);

        columns.AddFor(m => m.PurchasedOrManufactured);

        columns.AddFor(m => m.ScrapPercentage);

        columns.AddFor(m => m.BomSequence);

        columns.AddFor(m => m.FullSequence);

        columns.AddFor(m => m.ParentId);

        columns.AddFor(m => m.HasChild);

        columns.AddFor(m => m.StandardCost);

        columns.AddFor(m => m.LineCost);

        columns.AddFor(m => m.ManufacturerCodes);

        columns.AddFor(m => m.BomDate);

        columns.AddFor(m => m.BomReference);

        columns.AddFor(m => m.BomRelease);
    })
    .Editing(e => e
        .AllowAdding(true)
        .AllowUpdating(true)
        .AllowDeleting(true))
    )
)
